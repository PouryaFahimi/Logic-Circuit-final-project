$date
	Wed Jan 08 15:01:33 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Capacity_tb $end
$var wire 3 ! out [2:0] $end
$var reg 4 " in [3:0] $end
$scope module UUT $end
$var wire 4 # in [3:0] $end
$var reg 3 $ out [2:0] $end
$var integer 32 % i [31:0] $end
$upscope $end
$upscope $end
$scope module Circuit_tb $end
$var wire 4 & state [3:0] $end
$var wire 5 ' sev_sel [4:0] $end
$var wire 8 ( sev_data [7:0] $end
$var wire 1 ) open $end
$var wire 1 * full $end
$var wire 3 + capacity [2:0] $end
$var wire 3 , best_place [2:0] $end
$var reg 1 - clk $end
$var reg 1 . entry $end
$var reg 1 / exit $end
$var reg 2 0 switch [1:0] $end
$var integer 32 1 file [31:0] $end
$var integer 32 2 file_out [31:0] $end
$var integer 32 3 status [31:0] $end
$scope module UUT $end
$var wire 1 - clk $end
$var wire 1 . entry_sensor $end
$var wire 1 / exit_sensor $end
$var wire 1 * full_light $end
$var wire 1 4 full_temp $end
$var wire 2 5 switch [1:0] $end
$var wire 3 6 temp_loc [2:0] $end
$var wire 3 7 temp_cap [2:0] $end
$var wire 4 8 state [3:0] $end
$var wire 5 9 sev_sel [4:0] $end
$var wire 8 : sev_data [7:0] $end
$var wire 4 ; parking_slots [3:0] $end
$var wire 1 ) door_open_light $end
$var wire 3 < capacity [2:0] $end
$var wire 3 = best_place [2:0] $end
$scope module cap $end
$var wire 4 > in [3:0] $end
$var reg 3 ? out [2:0] $end
$var integer 32 @ i [31:0] $end
$upscope $end
$scope module fsm $end
$var wire 1 - clk $end
$var wire 4 A in [3:0] $end
$var reg 1 ) door_open_pulse $end
$var reg 4 B next_state [3:0] $end
$var reg 4 C state [3:0] $end
$upscope $end
$scope module loc $end
$var wire 1 D and0 $end
$var wire 1 E and1 $end
$var wire 1 F and2 $end
$var wire 4 G in [3:0] $end
$var wire 1 H not_in0 $end
$var wire 1 I not_in1 $end
$var wire 1 J not_in2 $end
$var wire 1 K not_in3 $end
$var wire 3 L encoded [2:0] $end
$upscope $end
$scope module sev_seg $end
$var wire 1 - clk $end
$var wire 12 M s1a [11:0] $end
$var reg 4 N digit [3:0] $end
$var reg 2 O digit_select [1:0] $end
$var reg 22 P refresh_counter [21:0] $end
$var reg 5 Q see_sel [4:0] $end
$var reg 8 R set_Data [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module FSM_tb $end
$var wire 4 S state [3:0] $end
$var wire 1 T door_open_pulse $end
$var reg 1 U clk $end
$var reg 4 V in [3:0] $end
$scope module UUT $end
$var wire 1 U clk $end
$var wire 4 W in [3:0] $end
$var reg 1 T door_open_pulse $end
$var reg 4 X next_state [3:0] $end
$var reg 4 Y state [3:0] $end
$upscope $end
$upscope $end
$scope module Location_tb $end
$var wire 3 Z encoded [2:0] $end
$var reg 4 [ in [3:0] $end
$scope module UUT $end
$var wire 1 \ and0 $end
$var wire 1 ] and1 $end
$var wire 1 ^ and2 $end
$var wire 4 _ in [3:0] $end
$var wire 1 ` not_in0 $end
$var wire 1 a not_in1 $end
$var wire 1 b not_in2 $end
$var wire 1 c not_in3 $end
$var wire 3 d encoded [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1 d
1c
1b
1a
0`
b1 _
0^
0]
1\
b1 [
b1 Z
b0 Y
bx X
b0 W
b0 V
0U
0T
b0 S
bx R
bx Q
bx P
bx O
bx N
b100000000 M
b0 L
1K
1J
1I
1H
b0 G
0F
0E
0D
b0 C
bx B
b0 A
b100 @
b100 ?
b0 >
b0 =
b100 <
b0 ;
bx :
bx 9
b0 8
b100 7
b0 6
b0 5
04
b100 3
b10000000000000000000000000000100 2
b10000000000000000000000000000011 1
b0 0
0/
0.
0-
b0 ,
b100 +
x*
0)
bx (
bx '
b0 &
b100 %
b11 $
b1 #
b1 "
b11 !
$end
#50000
b0 X
b0 B
0*
1U
1-
#100000
b0 Z
b0 d
1`
0\
b100 %
b100 !
b100 $
0U
0-
b0 [
b0 _
b1000 V
b1000 W
b1000 A
1.
b0 "
b0 #
#150000
b1 6
b1 ,
b1 =
b1 L
b11000001 M
b11 7
0H
1D
b1 &
b1 ;
b100 @
b11 +
b11 <
b11 ?
b1 S
b1 Y
1T
b1 8
b1 >
b1 C
b1 G
1)
b1 X
b1 B
1U
1-
#200000
0b
b100 %
b11 !
b11 $
0U
0-
b100 [
b100 _
b100 V
b100 W
b1001 A
b1 0
b1 5
b100 "
b100 #
#250000
b10 6
0D
b10 ,
b10 =
b10 L
b10000010 M
b10 7
0I
1E
b11 &
b11 ;
b100 @
b10 +
b10 <
b10 ?
b0 S
b0 Y
b11 8
b11 >
b11 C
b11 G
b0 X
b11 B
1U
1-
#300000
0c
1b
0a
b100 %
b10 !
b10 $
0U
0-
b1010 [
b1010 _
b1000 V
b1000 W
b1 A
0.
b1010 "
b1010 #
#350000
b1 S
b1 Y
0)
b1 X
1U
1-
#400000
0b
0`
0]
b101 Z
b101 d
b100 %
b0 !
b0 $
0U
0-
b1111 [
b1111 _
b11 0
b11 5
b1011 A
1.
b1111 "
b1111 #
#450000
b11 6
0E
b11 ,
b11 =
b11 L
b1000011 M
b1 7
0J
1F
b111 &
b111 ;
b100 @
b1 +
b1 <
b1 ?
b11 S
b11 Y
b111 8
b111 >
b111 C
b111 G
1)
b11 X
b111 B
1U
1-
#500000
1`
b0 Z
b0 d
b1 !
b1 $
b100 %
0U
0-
b1110 [
b1110 _
b1 0
b1 5
1/
b101 A
0.
b1110 "
b1110 #
#550000
b1 6
1D
b1 ,
b1 =
b1 L
b10000001 M
b10 7
1I
0F
b101 &
b101 ;
b100 @
b10 +
b10 <
b10 ?
b111 S
b111 Y
b101 8
b101 >
b101 C
b101 G
b111 X
b101 B
1U
1-
#600000
b11 Z
b11 d
1^
1c
0`
0U
0-
b111 [
b111 _
b0 0
b0 5
0/
b1000 A
1.
#650000
b11 6
0D
b11 ,
b11 =
b11 L
b1000011 M
b1 7
0I
1F
b111 &
b111 ;
b100 @
b1 +
b1 <
b1 ?
b1111 S
b1111 Y
b111 8
b111 >
b111 C
b111 G
b1111 X
b111 B
1U
1-
#700000
0U
0-
1/
b100 A
0.
#750000
b0 6
b0 ,
b0 =
b0 L
b10000000 M
b10 7
1H
0F
b110 &
b110 ;
b100 @
b10 +
b10 <
b10 ?
0T
b110 8
b110 >
b110 C
b110 G
b110 B
1U
1-
#800000
0U
0-
#850000
0)
1U
1-
#900000
0U
0-
b1 0
b1 5
0/
b1001 A
1.
#950000
b11 6
b11 ,
b11 =
b11 L
b1000011 M
b1 7
0H
1F
b111 &
b111 ;
b100 @
b1 +
b1 <
b1 ?
b111 8
b111 >
b111 C
b111 G
1)
b111 B
1U
1-
#1000000
0U
0-
b1000 A
b0 0
b0 5
#1050000
b101 6
0F
b101 M
b0 7
0K
b101 ,
b101 =
b101 L
14
b1111 &
b1111 ;
b100 @
b0 +
b0 <
b0 ?
b1111 8
b1111 >
b1111 C
b1111 G
b1111 B
1U
1-
#1100000
1*
0U
0-
b1011 A
b11 0
b11 5
#1150000
0)
1U
1-
#1200000
0U
0-
b1000 A
b0 0
b0 5
#1250000
1U
1-
#1300000
0U
0-
b0 A
0.
#1350000
0*
1U
1-
#1400000
0U
0-
b100 A
1/
#1450000
b0 6
b1000000 M
b1 7
1H
b0 ,
b0 =
b0 L
04
b1110 &
b1110 ;
b1 +
b1 <
b1 ?
b100 @
b1110 8
b1110 >
b1110 C
b1110 G
1)
b1110 B
1U
1-
#1500000
0U
0-
b11 0
b11 5
b11 A
0/
#1550000
0)
1U
1-
#1600000
0U
0-
b10 0
b10 5
b110 A
1/
#1650000
b10000000 M
b10 7
1J
b1010 &
b1010 ;
b100 @
b10 +
b10 <
b10 ?
b1010 8
b1010 >
b1010 C
b1010 G
1)
b1010 B
1U
1-
#1700000
0U
0-
b111 A
b11 0
b11 5
#1750000
b11000000 M
b11 7
1K
b10 &
b10 ;
b100 @
b11 +
b11 <
b11 ?
b10 8
b10 >
b10 C
b10 G
b10 B
1U
1-
#1800000
0U
0-
b101 A
b1 0
b1 5
#1850000
b100000000 M
b100 7
1I
b0 &
b0 ;
b100 @
b100 +
b100 <
b100 ?
b0 8
b0 >
b0 C
b0 G
b0 B
1U
1-
#1900000
0U
0-
b0 0
b0 5
b0 A
0/
#1950000
0)
1U
1-
#2000000
0U
0-
#2050000
1U
1-
#2100000
0U
0-
#2150000
1U
1-
#2200000
0U
0-
